[
    {
        "name": "Arena",
        "trigger": "Arena",
        "level_nid": "5",
        "condition": "True",
        "commands": [],
        "only_once": false,
        "priority": 20,
        "_source": [
            "# Get the NIDs and positions of all units on the map and store them into variables. This will be used to put the units back after the arena battle.",
            "level_var;SavedUnitNids;[unit.nid for unit in game.get_all_units()]",
            "level_var;SavedUnitPositions;[unit.position for unit in game.get_all_units()]",
            "# Changes terrain to Arena terrain. Add an Arena layer to the tilemap in the Tilemap editor to chapters with an arena.",
            "show_layer;Arena;immediate",
            "transition;Close",
            "remove_all_units",
            "add_unit;{unit};{position};immediate;stack",
            "# Adds a dummy unit so that chapters with a Rout objective don't trigger their win condition after winning an arena battle",
            "make_generic;DUMMY;Citizen;1;enemy;None;Enemy",
            "add_unit;DUMMY;{position};immediate;closest",
            "# Find tier of class of player unit to determine enemy's tier",
            "level_var;EnemyTier;DB.classes.get(unit.klass).tier",
            "# Randomly choose the enemy's class from the pool. Add the tag ArenaIgnore to any classes that won't show up in the arena.",
            "level_var;ArenaEnemyKlassList;[klass.nid for klass in DB.classes if 'ArenaIgnore' not in klass.tags and klass.tier == game.level_vars['EnemyTier']]",
            "level_var;KlassRNG;game.get_random(0, len(game.level_vars['ArenaEnemyKlassList']) - 1)",
            "level_var;ArenaEnemyKlass;game.level_vars['ArenaEnemyKlassList'][game.level_vars['KlassRNG']]",
            "# Calculate level range for enemy and pick level at random",
            "level_var;low_level;max(1,unit.level - 4)",
            "level_var;high_level;min(20, unit.level + 4)",
            "level_var;EnemyLevel;game.get_random(game.level_vars['low_level'],game.level_vars['high_level'])",
            "# Calculate arena wager based on enemy level",
            "level_var;ArenaPercent;(game.level_vars['EnemyLevel'] - game.level_vars['low_level']) / float(game.level_vars['high_level'] - game.level_vars['low_level'])",
            "level_var;ArenaWager;int(min(550 + game.level_vars['ArenaPercent'] * (1100 - 550), game.get_money()))",
            "# Spawn enemy",
            "make_generic;;{v:ArenaEnemyKlass};{v:EnemyLevel};enemy;None;Enemy",
            "add_unit;{created_unit};{unit};immediate;closest",
            "# Equip enemy with weapon. Determines what weapons are available to equip based on usability defined in the Class Editor.",
            "level_var;WeaponDict;{'Sword':'Iron_Sword','Lance':'Iron_Lance','Axe':'Iron_Axe','Bow':'Iron_Bow','Anima':'Fire','Light':'Lightning','Dark':'Flux'}",
            "for;LoadItem;[w for w in DB.classes.get(game.get_unit('{created_unit}').klass).wexp_gain if DB.classes.get(game.get_unit('{created_unit}').klass).wexp_gain[w].usable == True]",
            "set_wexp;{created_unit};{LoadItem};1;no_banner",
            "give_item;{created_unit};{e:game.level_vars['WeaponDict']['{LoadItem}']};no_banner",
            "endf",
            "# Randomly choose which weapon to equip.",
            "level_var;InventorySlot;game.get_random(0,len(game.get_unit('{created_unit}').items) - 1)",
            "equip_item;{created_unit};{e:game.get_unit('{created_unit}').items[{v:InventorySlot}]}",
            "#Moves the unit away from the player unit so they can retaliate if equipped with a bow.",
            "if;game.get_unit('{created_unit}').get_weapon().weapon_type.value == 'Bow'",
            "move_unit;{created_unit};{e:game.get_unit('{unit}').position[0] - 1},{e:game.get_unit('{unit}').position[1] - 1};immediate;stack",
            "end",
            "change_background;ArenaEntrance",
            "draw_overlay_sprite;ArenaPortrait;arena_portrait;4,4;1",
            "table;GoldDisplay;game.get_money();;;60;right;funds_display;;center;expression",
            "# Fade to arena background",
            "transition;open",
            "music;Arena Entrance",
            "if;game.get_money() == 0",
            "speak;;What! You don't have any money! Get out of here!;top_right;160;noir",
            "elif;unit.get_weapon()",
            "speak;;Welcome to the arena!;top_right;160;noir",
            "# Get name of class to display on table",
            "level_var;ArenaEnemyKlass;DB.classes.get(game.get_unit('{created_unit}').klass).name",
            "level_var;ArenaItem;game.get_unit('{created_unit}').get_weapon().name",
            "textbox;OpponentStats;Opponent:{br}{v:ArenaEnemyKlass} - {v:ArenaItem};bottom;140;2",
            "choice;ArenaChoice;Would you like to wager {var:ArenaWager} gold?;Yes,No;backable",
            "if;game.game_vars['ArenaChoice'] == 'Yes'",
            "sound;GoldExchange",
            "give_money;{e:-game.level_vars['ArenaWager']};no_banner",
            "change_music;player_battle;Arena Battle",
            "speak;;Good luck. Don't get yourself killed.|Fight 'til defeat or press B to yield.;top_right;160;noir",
            "remove_table;OpponentStats",
            "transition;close",
            "change_background",
            "interact_unit;{unit};{created_unit};;;20;arena;force_animation",
            "end_skip",
            "if;game.check_dead('{created_unit}')",
            "change_background;Arena",
            "transition;open",
            "music;Arena Victory",
            "speak;;So you won, eh? Here's your prize. {e:2*game.level_vars['ArenaWager']} gold.;top_right;160;noir",
            "sound;GoldExchange",
            "give_money;{e:2*game.level_vars['ArenaWager']}",
            "music_fade_back;100",
            "end",
            "change_music;player_battle;Attack",
            "has_attacked;{unit}",
            "else",
            "speak;;What are you wasting my time for?;top_right;160;noir",
            "remove_table;OpponentStats",
            "end",
            "else",
            "speak;;What! You don't have a weapon! Get out of here!;top_right;160;noir",
            "end",
            "transition;close",
            "# Clean up after a round at the arena.",
            "change_background",
            "hide_layer;arena;immediate",
            "remove_unit;{created_unit};immediate",
            "remove_unit;DUMMY;immediate",
            "remove_table;GoldDisplay",
            "remove_overlay_sprite;ArenaPortrait",
            "for;ReturnUnits;range(0,len(game.level_vars['SavedUnitNids']))",
            "add_unit;{e:game.level_vars['SavedUnitNids'][{ReturnUnits}]};{e:game.level_vars['SavedUnitPositions'][{ReturnUnits}]};immediate;stack",
            "endf",
            "transition;open",
            "music_fade_back"
        ],
        "nid": "5 Arena"
    }
]